{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "resourceAPIVersion": {
      "type": "string"
    },
    "dnsNamePrefix": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "scriptsUri": {
      "type": "string"
    },
    "storageAccount": {
      "type": "object"
    },
    "vmCount": {
      "type": "int"
    },
    "masterNodeCount": {
      "type": "int"
    },
    "indexStart": {
      "type": "int",
      "defaultValue": 0
    },
    "vmSpec": {
      "type": "secureobject"
    },
    "networkSpec": {
      "type": "object"
    },
    "clusterSpec": {
      "type": "object"
    }
  },
  "variables": {
    "vmName": "[concat(parameters('dnsNamePrefix'), '-dn')]",
    "vmNameMN": "[concat(parameters('dnsNamePrefix'), '-mn')]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "storageAccountName": "[concat('dn', parameters('storageAccount').prefix)]",
    "publicIPAddressName": "[concat(variables('vmName'), '-publicIP')]",
    "securityGroupName": "[concat(parameters('dnsNamePrefix'), '-dn-sg')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/addHosts')]",
      "apiVersion": "[parameters('resourceAPIVersion')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "dataNodeNicLoop",
        "count": "[add(parameters('vmCount'), parameters('indexStart'), -1)]"
      },
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[concat(parameters('scriptsUri'), '/scripts/add-hosts.sh')]"
          ],
          "commandToExecute": "[concat('sh add-hosts.sh \"', parameters('networkSpec').privateIPPrefix, '\" \"', add(parameters('networkSpec').dataNodeAddressStart, parameters('indexStart')), '\" \"', parameters('dnsNamePrefix'), '\" \"', reference(concat(variables('publicIPAddressName'), copyIndex(parameters('indexStart')))).dnsSettings.fqdn, '\" ', ' ', add(parameters('clusterSpec').dataNodeCount, parameters('indexStart')), ' >> /home/$ADMINUSER/initialize-datanode.log 2>&1')]"
        }
      }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('vmNameMN'), copyIndex(), '/addHosts')]",
        "apiVersion": "[parameters('resourceAPIVersion')]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "dataNodeNicLoop",
          "count": "[parameters('masterNodeCount')]"
        },
        "properties": {
          "publisher": "Microsoft.OSTCExtensions",
          "type": "CustomScriptForLinux",
          "typeHandlerVersion": "1.4",
          "settings": {
            "fileUris": [
              "[concat(parameters('scriptsUri'), '/scripts/add-hosts.sh')]"
            ],
            "commandToExecute": "[concat('sh add-hosts.sh \"', parameters('networkSpec').privateIPPrefix, '\" \"', add(parameters('networkSpec').dataNodeAddressStart, parameters('indexStart')), '\" \"', parameters('dnsNamePrefix'), '\" \"', reference(concat(variables('publicIPAddressName'), copyIndex(parameters('indexStart')))).dnsSettings.fqdn, '\" ', ' ', add(parameters('clusterSpec').dataNodeCount, parameters('indexStart')), ' >> /home/$ADMINUSER/initialize-datanode.log 2>&1')]"
          }
        }
      }
      ]
    }
